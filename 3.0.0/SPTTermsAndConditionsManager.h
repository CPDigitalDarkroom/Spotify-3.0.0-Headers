//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTProductStateObserver.h"
#import "SPTTermsAndConditionsControllerDelegate.h"

@class MetaViewController, NSString, SPSession, SPTTermsAndConditionsController;

@interface SPTTermsAndConditionsManager : NSObject <SPTProductStateObserver, SPTTermsAndConditionsControllerDelegate>
{
    BOOL _shouldAcceptTermsAndPrivacySeparately;
    id <SPTProductState> _productState;
    SPSession *_session;
    MetaViewController *_metaViewController;
    SPTTermsAndConditionsController *_termsAndConditionsController;
}

+ (id)licenseSuffixesRequiringSeparateAcceptance;
+ (id)termsAndConditionsManagerWithProductState:(id)arg1 session:(id)arg2 metaViewController:(id)arg3;
@property(nonatomic) BOOL shouldAcceptTermsAndPrivacySeparately; // @synthesize shouldAcceptTermsAndPrivacySeparately=_shouldAcceptTermsAndPrivacySeparately;
@property(retain, nonatomic) SPTTermsAndConditionsController *termsAndConditionsController; // @synthesize termsAndConditionsController=_termsAndConditionsController;
@property(nonatomic) __weak MetaViewController *metaViewController; // @synthesize metaViewController=_metaViewController;
@property(nonatomic) __weak SPSession *session; // @synthesize session=_session;
@property(nonatomic) __weak id <SPTProductState> productState; // @synthesize productState=_productState;
- (void).cxx_destruct;
- (void)termsAndConditionsControllerDidDeclineTermsAndConditions:(id)arg1;
- (void)termsAndConditionsControllerDidAcceptTermsAndConditions:(id)arg1;
- (void)dealloc;
- (void)productState:(id)arg1 stateDidChange:(id)arg2;
- (void)termsAndConditionsDeclined;
- (void)showTermsAndConditionsControllerWithLicenses:(id)arg1;
- (void)checkNeedsTermsAndConditionsUpdate;
- (id)initWithProductState:(id)arg1 session:(id)arg2 metaViewController:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

