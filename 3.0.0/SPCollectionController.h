//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSMutableDictionary, NSObject<SPCollectionControllerDelegate>, NSString, SPCore, SPSession, SPTPlayedStateManager, SPTrackContext;

@interface SPCollectionController : NSObject
{
    SPSession *_session;
    SPCore *_core;
    SPTPlayedStateManager *_playedStateManager;
    struct scoped_ptr<spotify::collection::CollectionFeatureContainer> _collectionFeatureContainer;
    NSArray *_artists;
    NSArray *_albums;
    NSMutableDictionary *_albumMedatadataObjectListsForArtistURL;
    struct SPCollectionModelObserver _modelObserver;
    struct SPCollectionModelCallbacks _modelCallbacks;
    struct CollectionMetadataCacheSyncer *_collectionMetadataCacheSyncer;
    struct scoped_ptr<spotify::core::experimental::scheduler::Scheduler> _scheduler;
    struct spotify_resolver *_collection_resolver;
    shared_ptr_fdeba099 _collection_resolver_cpp;
    int _collection_resolver_token;
    NSObject<SPCollectionControllerDelegate> *_delegate;
    SPTrackContext *_allTracks;
    NSMutableDictionary *_albumURLContextCache;
    NSMutableDictionary *_artistURLContextCache;
}

@property(retain, nonatomic) NSMutableDictionary *artistURLContextCache; // @synthesize artistURLContextCache=_artistURLContextCache;
@property(retain, nonatomic) NSMutableDictionary *albumURLContextCache; // @synthesize albumURLContextCache=_albumURLContextCache;
@property(retain, nonatomic) SPTrackContext *allTracks; // @synthesize allTracks=_allTracks;
@property(nonatomic) __weak NSObject<SPCollectionControllerDelegate> *delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)unregisterCollectionResolverWithRouter:(id)arg1;
- (void)registerCollectionResolverWithRouter:(id)arg1;
- (BOOL)canAddTrackWithURL:(id)arg1;
- (BOOL)containsURL:(id)arg1;
- (void)removeURLs:(id)arg1 source:(id)arg2;
- (void)addURLs:(id)arg1 source:(id)arg2;
- (BOOL)isAlbumComplete:(id)arg1;
- (void)unfollowArtistWithURL:(id)arg1;
- (void)followArtistWithURL:(id)arg1;
- (BOOL)isFollowedArtist:(id)arg1;
- (int)countOfTracksInCollectionForAlbumURL:(id)arg1;
- (int)countOfAlbumsInCollectionForArtistURL:(id)arg1;
- (int)countOfTracksInCollectionForArtistURL:(id)arg1;
- (id)albumsForArtistURL:(id)arg1;
- (void)requestAlbumsForArtistURL:(id)arg1;
- (id)albums;
- (void)requestAlbums;
- (id)artists;
- (void)requestArtists;
- (id)contextForAlbumURL:(id)arg1;
- (id)contextForArtistURL:(id)arg1;
- (id)contextForSongs;
@property(readonly, nonatomic) NSString *username;
- (void)saveState;
- (void)unload;
- (id)initWithSession:(id)arg1 core:(id)arg2 playedStateManager:(id)arg3;
- (void)albumListChanged;
- (void)albumListChangedForArtistLink:(id)arg1;
- (void)artistListChanged;
- (void)albumAddedCallbackForAlbum:(id)arg1;
- (void)albumListCallbackForArtistURL:(id)arg1 withAlbums:(id)arg2;
- (void)albumListCallbackWithAlbums:(id)arg1;
- (void)artistListCallbackWithArtists:(AsArray_c317e958 *)arg1;
@property(readonly, nonatomic) struct CollectionShowModel *collectionShowModel;
@property(readonly, nonatomic) shared_ptr_3053ad6d collectionModel;

@end

