//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "FollowModelObserver.h"
#import "SPTCollectionOfflineObserver.h"
#import "SPTOfflineModeStateObserver.h"
#import "SPTOfflineObserver.h"
#import "SPTPlayerObserver.h"

@class FollowModel, NSArray, NSString, NSURL, SPTArtist, SPTCollectionArtist, SPTCollectionContextMenuComponentFactory, SPTCollectionCurrentlyPlayingIndex, SPTEntityCancelationToken, SPTEntityService, SPTOfflineManager, SPTrackContext;

@interface SPTCollectionArtistModel : NSObject <FollowModelObserver, SPTPlayerObserver, SPTOfflineObserver, SPTCollectionOfflineObserver, SPTOfflineModeStateObserver>
{
    SPTCollectionContextMenuComponentFactory *_contextMenuComponentFactory;
    SPTCollectionCurrentlyPlayingIndex *_currentlyPlayingIndex;
    BOOL _loaded;
    id <SPTCollectionArtistModelDelegate> _delegate;
    NSURL *_portraitImageURL;
    NSURL *_headerImageURL;
    SPTArtist *_artist;
    SPTCollectionArtist *_collectionArtist;
    SPTrackContext *_shuffleContext;
    id <SPTPlayer> _player;
    id <SPTResolver> _resolver;
    FollowModel *_followModel;
    NSURL *_URL;
    SPTrackContext *_collectionArtistContext;
    id <SPTCollectionInternal> _collection;
    SPTEntityCancelationToken *_metadataTask;
    SPTEntityService *_entityService;
    SPTOfflineManager *_offlineManager;
    id <SPTOfflineModeState> _offlineNotifier;
}

@property(retain, nonatomic) id <SPTOfflineModeState> offlineNotifier; // @synthesize offlineNotifier=_offlineNotifier;
@property(retain, nonatomic) SPTOfflineManager *offlineManager; // @synthesize offlineManager=_offlineManager;
@property(retain, nonatomic) SPTEntityService *entityService; // @synthesize entityService=_entityService;
@property(retain, nonatomic) SPTEntityCancelationToken *metadataTask; // @synthesize metadataTask=_metadataTask;
@property(retain, nonatomic) id <SPTCollectionInternal> collection; // @synthesize collection=_collection;
@property(retain, nonatomic) SPTrackContext *collectionArtistContext; // @synthesize collectionArtistContext=_collectionArtistContext;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(retain, nonatomic) FollowModel *followModel; // @synthesize followModel=_followModel;
@property(retain, nonatomic) id <SPTResolver> resolver; // @synthesize resolver=_resolver;
@property(retain, nonatomic) id <SPTPlayer> player; // @synthesize player=_player;
@property(retain, nonatomic) SPTrackContext *shuffleContext; // @synthesize shuffleContext=_shuffleContext;
@property(retain, nonatomic) SPTCollectionArtist *collectionArtist; // @synthesize collectionArtist=_collectionArtist;
@property(retain, nonatomic) SPTArtist *artist; // @synthesize artist=_artist;
@property(retain, nonatomic) NSURL *headerImageURL; // @synthesize headerImageURL=_headerImageURL;
@property(retain, nonatomic) NSURL *portraitImageURL; // @synthesize portraitImageURL=_portraitImageURL;
@property(nonatomic) __weak id <SPTCollectionArtistModelDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) BOOL loaded; // @synthesize loaded=_loaded;
- (void).cxx_destruct;
- (void)offlineModeState:(id)arg1 updated:(BOOL)arg2;
- (id)findAndRemoveLargestPictureInPictureGroups:(id)arg1;
- (void)updateWithCollectionArtist:(id)arg1 withPictures:(id)arg2;
- (void)toggleFollowState;
- (void)followModel:(id)arg1 followDataDidChange:(id)arg2;
- (void)offlineStateChanged;
- (void)offlineStateChangedForEntity:(id)arg1;
- (BOOL)hasNoSavedTracks;
@property(readonly, nonatomic, getter=isFollowedByCurrentUser) BOOL followedByCurrentUser;
@property(readonly, nonatomic, getter=isSessionOffline) BOOL sessionOffline;
- (unsigned int)offlineSyncState;
- (unsigned int)offlineSyncStateForTrackAtIndex:(unsigned int)arg1;
@property(nonatomic, getter=isOffline) BOOL offline;
- (id)artistContextMenuComponent;
- (id)contextMenuComponentForTrackAtIndex:(unsigned int)arg1;
- (void)player:(id)arg1 stateDidChange:(id)arg2;
@property(readonly, nonatomic) unsigned int currentlyPlayingTrackIndex;
- (void)updateCurrentlyPlayingTrack:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(readonly, nonatomic) NSURL *collectionArtistLink;
@property(readonly, nonatomic) unsigned int numberOfFollowers;
@property(readonly, nonatomic) SPTrackContext *context;
@property(readonly, nonatomic) NSArray *tracks;
@property(readonly, nonatomic) NSString *username;
- (unsigned int)count;
- (id)objectForIndex:(unsigned int)arg1;
- (void)updateListModelContext;
- (void)setupFollowModel;
- (void)removeKVO;
- (void)addKVO;
- (void)load;
- (void)dealloc;
- (id)initWithCollection:(id)arg1 player:(id)arg2 contextMenuComponentFactory:(id)arg3 resolver:(id)arg4 URL:(id)arg5 entityService:(id)arg6 offlineManager:(id)arg7 offlineNotifier:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

