//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "IDAudioServiceDelegate.h"
#import "RAPIBmwRemoteApplicationDelegate.h"

@class NSMutableArray, NSString, NSTimer, RAPIBmwRemoteApplicationManager, RAPIConfiguration, RAPILockScreenViewController, RAPIRemoteAppViewController, RAPIScreenContext, RAPIScreenTable;

@interface RAPIEntertainmentAppLink : NSObject <IDAudioServiceDelegate, RAPIBmwRemoteApplicationDelegate>
{
    NSString *lastAppName;
    NSString *lastTrackName;
    NSString *lastArtistName;
    NSString *lastAlbumName;
    id <RAPIEntertainmentAppLinkDelegate> _rapiDelegate;
    RAPIConfiguration *_configuration;
    NSTimer *_playbackStateUpdateTimer;
    NSMutableArray *_screenTableConfig;
    RAPIScreenTable *_screenTable;
    RAPIBmwRemoteApplicationManager *_bmwRemoteApplicationManager;
    RAPIRemoteAppViewController *_bmwRemoteAppViewController;
    RAPILockScreenViewController *_lockScreenViewController;
    RAPIScreenContext *_screenContext;
    float _imageCompressionFactor;
}

@property(nonatomic) float imageCompressionFactor; // @synthesize imageCompressionFactor=_imageCompressionFactor;
@property(retain) RAPIScreenContext *screenContext; // @synthesize screenContext=_screenContext;
@property(retain) RAPILockScreenViewController *lockScreenViewController; // @synthesize lockScreenViewController=_lockScreenViewController;
@property(retain) RAPIRemoteAppViewController *bmwRemoteAppViewController; // @synthesize bmwRemoteAppViewController=_bmwRemoteAppViewController;
@property(retain) RAPIBmwRemoteApplicationManager *bmwRemoteApplicationManager; // @synthesize bmwRemoteApplicationManager=_bmwRemoteApplicationManager;
@property(retain) RAPIScreenTable *screenTable; // @synthesize screenTable=_screenTable;
@property(retain) NSMutableArray *screenTableConfig; // @synthesize screenTableConfig=_screenTableConfig;
@property(retain, nonatomic) NSTimer *playbackStateUpdateTimer; // @synthesize playbackStateUpdateTimer=_playbackStateUpdateTimer;
@property(retain) RAPIConfiguration *configuration; // @synthesize configuration=_configuration;
@property __weak id <RAPIEntertainmentAppLinkDelegate> rapiDelegate; // @synthesize rapiDelegate=_rapiDelegate;
- (void).cxx_destruct;
- (float)getImageCompressionFactor;
- (void)invalidateImageForRow:(int)arg1 forGroup:(int)arg2 forScreen:(int)arg3;
- (void)invalidateScreen:(int)arg1 withErrorMessage:(id)arg2;
- (void)setCheckmarkPosition:(int)arg1 forGroup:(int)arg2 forScreen:(int)arg3;
- (void)updatePlaybackState;
- (void)handleMainScreenDisappeared;
- (void)handleMainScreenAppeared;
- (void)hideStatusMessageForScreen:(int)arg1;
- (void)showStatusMessage:(id)arg1 displayProgressIndicator:(BOOL)arg2 forScreen:(int)arg3;
- (void)showStatusMessage:(id)arg1 forScreen:(int)arg2;
- (void)postAudioServiceAvailability:(int)arg1;
- (void)showLockScreen:(id)arg1;
- (void)onDisconnectedFromHeadUnit;
- (void)onConnectedToHeadUnit:(id)arg1;
- (void)audioService:(id)arg1 multimediaButtonEvent:(int)arg2;
- (void)audioService:(id)arg1 interruptStateChanged:(int)arg2;
- (void)audioService:(id)arg1 entertainmentStateChanged:(int)arg2;
- (void)setCoverArt:(id)arg1;
- (void)setAlbumName:(id)arg1;
- (void)setArtistName:(id)arg1;
- (void)setTrackName:(id)arg1;
- (void)setToolbarTargetScreen:(int)arg1 forButton:(int)arg2;
- (void)setToolbarImage:(int)arg1 forButton:(int)arg2;
- (void)setToolbarTooltip:(id)arg1 forButton:(int)arg2;
- (void)setToolbarButtonHoverable:(BOOL)arg1 clickable:(BOOL)arg2 forButton:(int)arg3;
- (void)notifyOfOpenUrl:(id)arg1;
- (void)setAppName:(id)arg1;
- (void)shutdown;
- (id)initWithScreenTableConfig:(id)arg1 andDelegate:(id)arg2 handleOnItemClicked:(SEL)arg3 useConfiguration:(id)arg4;
- (void)handleLogFromRapiLogger:(id)arg1;
- (void)logStringWithFormat:(id)arg1 withArguments:(void *)arg2;
- (void)logStringWithFormat:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

