//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTLogCenterProtocol.h"

@class NSMutableArray, NSString;

@interface SPTLogCenter : NSObject <SPTLogCenterProtocol>
{
    NSString *_anonymousToken;
    NSMutableArray *_messages;
    id <SPTLogger> _logger;
}

+ (id)defaultCenter;
@property(retain, nonatomic) id <SPTLogger> logger; // @synthesize logger=_logger;
@property(retain, nonatomic) NSMutableArray *messages; // @synthesize messages=_messages;
@property(retain, nonatomic) NSString *anonymousToken; // @synthesize anonymousToken=_anonymousToken;
- (void).cxx_destruct;
- (void)logAppStartupWithStepName:(id)arg1;
- (void)logClientEventWithSource:(id)arg1 context:(id)arg2 eventName:(id)arg3 eventVersion:(id)arg4 testVersion:(id)arg5 data:(id)arg6;
- (void)logAbnormalExitWithUUID:(id)arg1 timestamp:(long long)arg2;
- (void)logBrowseLink:(id)arg1 source:(id)arg2;
- (void)sendMessage:(id)arg1;
- (id)init;
- (void)setup:(id)arg1;
- (void)endAnonymousTracking;
- (BOOL)isAnonymousTrackingEnabled;
- (void)beginAnonymousTracking;
- (void)logHermesErrorForURL:(id)arg1;
- (void)logHermesResponseTime:(double)arg1 forURL:(id)arg2;
- (void)logHermesRequestStartForURL:(id)arg1;
- (void)logHTTPError:(id)arg1 forURL:(id)arg2 withURLSession:(BOOL)arg3;
- (void)logHTTPCancelRequestForURL:(id)arg1 withURLSession:(BOOL)arg2;
- (void)logHTTPFullResponseTime:(double)arg1 forURL:(id)arg2 withURLSession:(BOOL)arg3;
- (void)logHTTPInitialResponseTime:(double)arg1 forURL:(id)arg2 withURLSession:(BOOL)arg3;
- (void)logHTTPRequestStartForURL:(id)arg1 withURLSession:(BOOL)arg2;
- (void)logMetaViewControllerVCForLink:(id)arg1;
- (void)logAudioTouchTutorialCompletedStep:(int)arg1;
- (void)logAudioTouchTutorialPresented;
- (void)logAudioTouchTutorialCanceled;
- (void)logAudioTouchTutorialBannerDismissed;
- (void)logAudioTouchTutorialCompleted;
- (void)logiTunesLibraryRecognition:(id)arg1 echoprintID:(id)arg2 spotifyTrackURL:(id)arg3;
- (void)logiTunesLibraryItem:(id)arg1;
- (void)logContextMenuActionPerformed:(id)arg1 context:(id)arg2;
- (void)spt_logContextMenuPresentationForEntity:(id)arg1;
- (void)spt_logContextMenuPresentationForTrack:(id)arg1 fromEntity:(id)arg2;
- (void)logEqualizerPreset:(id)arg1;
- (void)logEqualizerOn:(BOOL)arg1;
- (void)logEqualizerValues:(id)arg1;
- (void)logPopupActiveDeviceChange:(id)arg1 eventType:(id)arg2 duration:(double)arg3;
- (void)logDidPickDeviceFailed;
- (void)logDidPickDevice:(id)arg1;
- (void)logPickerDidDisappearWithDeviceCount:(unsigned int)arg1;
- (void)logPickerDidAppearWithDeviceCount:(unsigned int)arg1;
- (id)buttonEventContextForDeviceManager:(id)arg1;
- (void)logButtonDidAppearWithDeviceManager:(id)arg1 lastImpression:(id)arg2 lastAnimation:(id)arg3;
- (void)logNowPlayingDurationSliderTouchedUpInside;
- (void)logNowPlayingSwipeToClose;
- (void)logNowPlayingContentUnitDescriptionScrolled;
- (void)logNowPlayingSkip15Back;
- (void)logNowPlayingSkip15Forward;
- (void)logNowPlayingContextLinkButtonTouchedUpInside;
- (void)logNowPlayingTrackArtistLinkTouchedUpInside;
- (void)logNowPlayingContextLinkTouchedUpInside;
- (void)logNowPlayingAirPlayButtonTouchedUpInside;
- (void)logNowPlayingConnectButtonTouchedUpInside;
- (void)logNowPlayingDurationSliderValueChanged;
- (void)logNowPlayingRadioThumbDownButtonTouchedUpInside;
- (void)logNowPlayingRadioThumbUpButtonTouchedUpInside;
- (void)logNowPlayingNextButtonTouchedUpInsideWithBehavior:(int)arg1;
- (void)logNowPlayingPlayButtonTouchedUpInside;
- (void)logNowPlayingPreviousButtonTouchedUpInsideWithBehavior:(int)arg1;
- (void)logNowPlayingRepeatButtonTouchedUpInside;
- (void)logNowPlayingShuffleButtonTouchedUpInside;
- (void)logNowPlayingContextMenuButtonTouchedUpInside;
- (void)logNowPlayingCollectionButtonTouchedUpInside;
- (void)logNowPlayingQueueButtonTouchedUpInside;
- (void)logNowPlayingCloseButtonTouchedUpInside;
- (void)logNowPlayingCoverArtDraggedToLeftWithBehavior:(int)arg1;
- (void)logNowPlayingCoverArtDraggedToRightWithBehavior:(int)arg1;
- (void)logNowPlayingSwipeToNPV;
- (void)logNowPlayingBarCollectionButtonTouchedUpInside;
- (void)logNowPlayingBarPreviousTrackSwiped;
- (void)logNowPlayingBarNextTrackSwiped;
- (void)logNowPlayingBarDurationSliderValueChanged;
- (void)logNowPlayingBarNextButtonTouchedUpInside;
- (void)logNowPlayingBarPlayButtonTouchedUpInside;
- (void)logNowPlayingBarPreviousButtonTouchedUpInside;
- (void)logNowPlayingVideoPlayButtonTouchedUpInside;
- (void)logNowPlayingVideoDurationSliderValueChanged;
- (void)logNowPlayingVideoMinizeButtonTouchedUpInside;
- (void)logNowPlayingVideoDurationSliderTouchedUpInside;
- (void)logNowPlayingVideoNextButtonTouchedUpInsideWithBehavior:(int)arg1;
- (void)logNowPlayingVideoPreviousButtonTouchedUpInsideWithBehavior:(int)arg1;
- (void)logNowPlayingVideoTouchedUpInside:(BOOL)arg1;
- (void)logNowPlayingVideoSkip15Back;
- (void)logNowPlayingVideoSkip15Forward;
- (void)logNowPlayingVideoRotatedPortrait;
- (void)logNowPlayingVideoRotatedLandscape;
- (void)logTabControlInViewUrl:(id)arg1 changedIndex:(int)arg2;
- (void)logLoadShowViewURL:(id)arg1;
- (void)logOpenContextMenuShowInViewURL:(id)arg1;
- (void)logOpenContextMenuEpisodeInViewURL:(id)arg1 episodeURI:(id)arg2 indexPath:(id)arg3;
- (void)logEditModeBatchRemoveOfflineInViewURL:(id)arg1 all:(BOOL)arg2;
- (void)logEditModeItemActionInViewURL:(id)arg1 episodeURI:(id)arg2 indexPath:(id)arg3 remove:(BOOL)arg4;
- (void)logEditModeItemActionInViewURL:(id)arg1 episodeURI:(id)arg2 indexPath:(id)arg3 offline:(BOOL)arg4;
- (void)logEditModeInViewURL:(id)arg1 entered:(BOOL)arg2 listPosition:(float)arg3;
- (void)logShowFollowInViewURL:(id)arg1 didFollow:(BOOL)arg2 fromContextMenu:(BOOL)arg3 autoFollow:(BOOL)arg4;
- (void)logEpisodeSortingInViewURL:(id)arg1 sorting:(unsigned int)arg2;
- (void)logEpisodeFilterResetInViewURL:(id)arg1;
- (void)logEpisodeFilterSetInViewURL:(id)arg1 filter:(id)arg2 previousFilter:(id)arg3;
- (void)logCollectionNavigationItemSelectedInViewURL:(id)arg1 indexPath:(id)arg2 navURL:(id)arg3;
- (void)logEpisodeSelectedInViewURL:(id)arg1 indexPath:(id)arg2 episodeURL:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

