//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTCollectionOfflineObserver.h"
#import "SPTOfflineModeStateObserver.h"
#import "SPTOfflineObserver.h"
#import "SPTPlayerObserver.h"

@class NSArray, NSString, NSURL, SPTAlbum, SPTCollectionAlbum, SPTCollectionContextMenuComponentFactory, SPTCollectionCurrentlyPlayingIndex, SPTEntityCancelationToken, SPTEntityService, SPTrackContext;

@interface SPTCollectionAlbumModel : NSObject <SPTPlayerObserver, SPTOfflineObserver, SPTCollectionOfflineObserver, SPTOfflineModeStateObserver>
{
    SPTrackContext *_fullAlbumContext;
    SPTCollectionContextMenuComponentFactory *_contextMenuComponentFactory;
    SPTCollectionCurrentlyPlayingIndex *_currentlyPlayingIndex;
    BOOL _loaded;
    id <SPTCollectionAlbumModelDelegate> _delegate;
    SPTAlbum *_album;
    SPTCollectionAlbum *_collectionAlbum;
    id <SPTPlayer> _player;
    NSURL *_URL;
    id <SPTCollectionInternal> _collectionInternal;
    SPTrackContext *_collectionAlbumContext;
    SPTEntityCancelationToken *_metadataTask;
    SPTEntityService *_entityService;
    id <SPTOfflineModeState> _offlineNotifier;
}

@property(retain, nonatomic) id <SPTOfflineModeState> offlineNotifier; // @synthesize offlineNotifier=_offlineNotifier;
@property(retain, nonatomic) SPTEntityService *entityService; // @synthesize entityService=_entityService;
@property(retain, nonatomic) SPTEntityCancelationToken *metadataTask; // @synthesize metadataTask=_metadataTask;
@property(retain, nonatomic) SPTrackContext *fullAlbumContext; // @synthesize fullAlbumContext=_fullAlbumContext;
@property(retain, nonatomic) SPTrackContext *collectionAlbumContext; // @synthesize collectionAlbumContext=_collectionAlbumContext;
@property(retain, nonatomic) id <SPTCollectionInternal> collectionInternal; // @synthesize collectionInternal=_collectionInternal;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(retain, nonatomic) id <SPTPlayer> player; // @synthesize player=_player;
@property(retain, nonatomic) SPTCollectionAlbum *collectionAlbum; // @synthesize collectionAlbum=_collectionAlbum;
@property(retain, nonatomic) SPTAlbum *album; // @synthesize album=_album;
@property(nonatomic) __weak id <SPTCollectionAlbumModelDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) BOOL loaded; // @synthesize loaded=_loaded;
- (void).cxx_destruct;
- (void)offlineModeState:(id)arg1 updated:(BOOL)arg2;
- (void)offlineStateChanged;
- (void)offlineStateChangedForEntity:(id)arg1;
@property(readonly, nonatomic) NSURL *coverArtLink;
- (void)updateWithCollectionAlbum:(id)arg1;
@property(nonatomic, getter=isInCollection) BOOL inCollection;
@property(readonly, nonatomic, getter=isSessionOffline) BOOL sessionOffline;
- (unsigned int)offlineSyncStateForTrackAtIndex:(unsigned int)arg1;
@property(nonatomic, getter=isOffline) BOOL offline;
- (id)albumContextMenuComponent;
- (id)contextMenuComponentForTrackAtIndex:(unsigned int)arg1;
@property(readonly, nonatomic) id <SPTCollection> collection;
- (BOOL)fullAlbumContextLoaded;
@property(readonly, nonatomic) NSURL *collectionAlbumLink;
@property(readonly, nonatomic) SPTrackContext *context;
@property(readonly, nonatomic) NSArray *tracks;
@property(readonly, nonatomic) NSString *username;
- (void)player:(id)arg1 stateDidChange:(id)arg2;
@property(readonly, nonatomic) unsigned int currentlyPlayingTrackIndex;
- (void)updateCurrentlyPlayingTrack:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeKVO;
- (void)addKVO;
- (void)dealloc;
- (void)load;
- (id)initWithCollection:(id)arg1 player:(id)arg2 contextMenuComponentFactory:(id)arg3 URL:(id)arg4 entityService:(id)arg5 offlineNotifier:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

