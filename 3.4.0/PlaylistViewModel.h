//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPPopcountLookupDelegate.h"
#import "SPTCollectionSorting.h"
#import "SPTOfflineObserver.h"
#import "SPTPlayerObserver.h"

@class NSArray, NSDate, NSMutableDictionary, NSString, NSURL, SPKVObservation, SPPlaylist, SPPlaylistContainer, SPPopcountLookup, SPSession, SPTOfflineManager, SPTPlayerState, SPTrackContext, SPUser, SPWebTokenRequest;

@interface PlaylistViewModel : NSObject <SPPopcountLookupDelegate, SPTPlayerObserver, SPTOfflineObserver, SPTCollectionSorting>
{
    _Bool _totalDurationLoaded;
    _Bool _enableReportAbuse;
    _Bool _playlistIsAllTracksInFolder;
    _Bool _numberOfSubscribersLoaded;
    _Bool _checkReportAbuse;
    _Bool _hasRegisteredObservers;
    _Bool _ascendingSortOrder;
    id <PlaylistViewModelDelegate> _delegate;
    SPTrackContext *_context;
    SPPlaylist *_playlist;
    SPUser *_playlistOwner;
    SPTOfflineManager *_offlineManager;
    NSDate *_playlistLastEditedDate;
    long long _numberOfSubscribers;
    double _totalDuration;
    SPPlaylistContainer *_folder;
    SPSession *_session;
    id <SPTTrackContextPlayer> _trackContextPlayer;
    id <SPTPlayer> _player;
    SPTPlayerState *_lastPlayerState;
    SPWebTokenRequest *_webTokenRequest;
    SPPopcountLookup *_popcountLookup;
    NSMutableDictionary *_offlineObservations;
    SPKVObservation *_contextIsLoadedObservation;
    id <SPTProductState> _productState;
    unsigned long long _sortColumn;
}

@property(nonatomic) _Bool ascendingSortOrder; // @synthesize ascendingSortOrder=_ascendingSortOrder;
@property(nonatomic) unsigned long long sortColumn; // @synthesize sortColumn=_sortColumn;
@property(retain, nonatomic) id <SPTProductState> productState; // @synthesize productState=_productState;
@property(retain, nonatomic) SPKVObservation *contextIsLoadedObservation; // @synthesize contextIsLoadedObservation=_contextIsLoadedObservation;
@property(nonatomic) _Bool hasRegisteredObservers; // @synthesize hasRegisteredObservers=_hasRegisteredObservers;
@property(retain, nonatomic) NSMutableDictionary *offlineObservations; // @synthesize offlineObservations=_offlineObservations;
@property(retain, nonatomic) SPPopcountLookup *popcountLookup; // @synthesize popcountLookup=_popcountLookup;
@property(nonatomic) _Bool checkReportAbuse; // @synthesize checkReportAbuse=_checkReportAbuse;
@property(retain, nonatomic) SPWebTokenRequest *webTokenRequest; // @synthesize webTokenRequest=_webTokenRequest;
@property(nonatomic) _Bool numberOfSubscribersLoaded; // @synthesize numberOfSubscribersLoaded=_numberOfSubscribersLoaded;
@property(retain, nonatomic) SPTPlayerState *lastPlayerState; // @synthesize lastPlayerState=_lastPlayerState;
@property(retain, nonatomic) id <SPTPlayer> player; // @synthesize player=_player;
@property(retain, nonatomic) id <SPTTrackContextPlayer> trackContextPlayer; // @synthesize trackContextPlayer=_trackContextPlayer;
@property(nonatomic) __weak SPSession *session; // @synthesize session=_session;
@property(readonly, nonatomic) _Bool playlistIsAllTracksInFolder; // @synthesize playlistIsAllTracksInFolder=_playlistIsAllTracksInFolder;
@property(retain, nonatomic) SPPlaylistContainer *folder; // @synthesize folder=_folder;
@property(nonatomic) _Bool enableReportAbuse; // @synthesize enableReportAbuse=_enableReportAbuse;
@property(nonatomic) _Bool totalDurationLoaded; // @synthesize totalDurationLoaded=_totalDurationLoaded;
@property(nonatomic) double totalDuration; // @synthesize totalDuration=_totalDuration;
@property(nonatomic) long long numberOfSubscribers; // @synthesize numberOfSubscribers=_numberOfSubscribers;
@property(retain, nonatomic) NSDate *playlistLastEditedDate; // @synthesize playlistLastEditedDate=_playlistLastEditedDate;
@property(nonatomic) __weak SPTOfflineManager *offlineManager; // @synthesize offlineManager=_offlineManager;
@property(retain, nonatomic) SPUser *playlistOwner; // @synthesize playlistOwner=_playlistOwner;
@property(retain, nonatomic) SPPlaylist *playlist; // @synthesize playlist=_playlist;
@property(retain, nonatomic) SPTrackContext *context; // @synthesize context=_context;
@property(nonatomic) __weak id <PlaylistViewModelDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)offlineStateChangedForEntity:(id)arg1;
- (void)endOfflineObservations;
- (void)beginOfflineObservationsForEntities:(id)arg1;
- (void)beginOfflineObservations;
- (unsigned long long)offlineSyncStatusForIndexPath:(id)arg1;
- (void)changeOfflineAvailabilityForEntityURLs:(id)arg1 offline:(_Bool)arg2;
- (void)changeOfflineAvailabilityForContainer:(id)arg1 offline:(_Bool)arg2;
@property(nonatomic, getter=isAvailableOffline) _Bool availableOffline;
- (id)offlineStateObjectURL;
- (id)offlineStateObject;
- (_Bool)isFolderModel;
- (void)player:(id)arg1 stateDidChange:(id)arg2 fromState:(id)arg3;
@property(readonly, nonatomic) NSArray *supportedSortColumns;
- (void)setSortOrderWithColumn:(unsigned long long)arg1 ascending:(_Bool)arg2;
@property(readonly, nonatomic) _Bool playlistCanEditTrackOrder;
@property(readonly, nonatomic) _Bool playlistCanBeEdited;
- (_Bool)sortingIsActive;
- (_Bool)filterIsActive;
@property(readonly, nonatomic) _Bool playlistIsOwnedByCurrentUser;
@property(nonatomic) _Bool playlistIsFollowedByCurrentUser;
- (void)subscribeToPlaylist:(id)arg1;
- (_Bool)isSubscribedToPlaylist:(id)arg1;
- (void)logUserHitClientEventWithEventVersion:(id)arg1;
- (id)loggingSource;
- (void)updateEnableReportAbuse;
- (void)abortRequestWebAccessToken;
- (void)acquireOathReportAbuseURL:(CDUnknownBlockType)arg1;
- (void)setUpReportAbuse:(id)arg1;
- (void)shufflePlay;
- (void)playTrackAtIndex:(unsigned long long)arg1;
- (_Bool)isPlayingContextRow:(id)arg1;
- (void)moveTrackAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (id)subtitleForTrack:(id)arg1 withOwnerName:(id)arg2;
- (id)ownerNameForTrackAtIndex:(unsigned long long)arg1;
- (id)trackAtIndex:(unsigned long long)arg1;
- (id)playlistContext;
@property(readonly, nonatomic) NSString *numberOfSubscribersText;
- (void)popCountLookup:(id)arg1 didFindSubscribers:(id)arg2 totalNumberOfSubscribers:(long long)arg3;
- (void)popCountLookup:(id)arg1 didFailWithError:(id)arg2;
- (void)hideUnplayableTracksSettingDidChange;
- (void)metadataDidChange;
- (void)contextTracksDidChange;
- (void)contextDidLoad;
- (void)removeTrackAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSURL *playlistImageURL;
- (_Bool)shouldHighlightTracks;
- (void)updateFollowerCount;
- (void)setupObservers;
- (void)load;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithContext:(id)arg1 playlist:(id)arg2 folder:(id)arg3 entityURL:(id)arg4 session:(id)arg5 trackContextPlayer:(id)arg6 player:(id)arg7 offlineManager:(id)arg8 popcountLookup:(id)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

