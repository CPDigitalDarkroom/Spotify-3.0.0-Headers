//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTImageLoaderDelegate.h"
#import "UICollectionViewDataSource.h"
#import "UICollectionViewDelegate.h"
#import "UITableViewDataSource.h"
#import "UITableViewDelegate.h"

@class NSArray, NSString, SPTEmbeddedCollectionViewTableViewCell, UITableView;

@interface SPTArtistArrayTableViewDataSource : NSObject <SPTImageLoaderDelegate, UITableViewDataSource, UITableViewDelegate, UICollectionViewDataSource, UICollectionViewDelegate>
{
    _Bool _showViewAllButton;
    _Bool _forceShowViewAllButton;
    _Bool _presentAsCollectionView;
    UITableView *_tableView;
    SPTEmbeddedCollectionViewTableViewCell *_collectionViewCell;
    NSString *_cellIdentifier;
    NSString *_title;
    NSArray *_items;
    long long _limit;
    double _rowHeight;
    NSString *_viewAllTitle;
    CDUnknownBlockType _itemTouched;
    CDUnknownBlockType _itemSelected;
    CDUnknownBlockType _viewAllTouched;
    CDUnknownBlockType _viewAllSelected;
    id <SPTImageLoader> _imageLoader;
}

@property(retain, nonatomic) id <SPTImageLoader> imageLoader; // @synthesize imageLoader=_imageLoader;
@property(nonatomic) _Bool presentAsCollectionView; // @synthesize presentAsCollectionView=_presentAsCollectionView;
@property(copy, nonatomic) CDUnknownBlockType viewAllSelected; // @synthesize viewAllSelected=_viewAllSelected;
@property(copy, nonatomic) CDUnknownBlockType viewAllTouched; // @synthesize viewAllTouched=_viewAllTouched;
@property(copy, nonatomic) CDUnknownBlockType itemSelected; // @synthesize itemSelected=_itemSelected;
@property(copy, nonatomic) CDUnknownBlockType itemTouched; // @synthesize itemTouched=_itemTouched;
@property(copy, nonatomic) NSString *viewAllTitle; // @synthesize viewAllTitle=_viewAllTitle;
@property(nonatomic) _Bool forceShowViewAllButton; // @synthesize forceShowViewAllButton=_forceShowViewAllButton;
@property(nonatomic) _Bool showViewAllButton; // @synthesize showViewAllButton=_showViewAllButton;
@property(nonatomic) double rowHeight; // @synthesize rowHeight=_rowHeight;
@property(nonatomic) long long limit; // @synthesize limit=_limit;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *cellIdentifier; // @synthesize cellIdentifier=_cellIdentifier;
@property(retain, nonatomic) SPTEmbeddedCollectionViewTableViewCell *collectionViewCell; // @synthesize collectionViewCell=_collectionViewCell;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (void)imageLoader:(id)arg1 didLoadImage:(id)arg2 forURL:(id)arg3 loadTime:(double)arg4 context:(id)arg5;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didHighlightItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)prepareCell:(id)arg1 withItem:(id)arg2 index:(long long)arg3;
- (_Bool)isViewAllCell:(unsigned long long)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didHighlightRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (void)prepareCell:(id)arg1 withItem:(id)arg2 index:(unsigned long long)arg3 count:(unsigned long long)arg4;
- (id)initWithTableView:(id)arg1 imageLoader:(id)arg2;
- (id)initWithTableView:(id)arg1 imageLoader:(id)arg2 presentAsCollectionView:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

