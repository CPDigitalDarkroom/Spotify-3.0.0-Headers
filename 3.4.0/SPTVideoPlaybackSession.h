//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AVPlayer, AVPlayerItem, AVURLAsset, FBKVOController, NSDate, NSError, NSObject<OS_dispatch_queue>, NSTimer, SPTHLSResourceLoaderImpl, SPTNetworkConnectivityController, SPTVideoAVFactory, SPTVideoLogger, SPTVideoPlaybackState, SPTVideoPlayerSource, SPTVideoTrack, SPTWidevineService, SPTask;

@interface SPTVideoPlaybackSession : NSObject
{
    _Bool _paused;
    _Bool _seeking;
    _Bool _stalled;
    _Bool _catchingUp;
    _Bool _offline;
    _Bool _restartStreamOnceOnline;
    SPTVideoTrack *_videoTrack;
    SPTVideoLogger *_logger;
    id <SPTVideoPlaybackSessionDelegate> _delegate;
    SPTHLSResourceLoaderImpl *_resourceLoader;
    NSObject<OS_dispatch_queue> *_resourceLoaderQueue;
    SPTWidevineService *_widevineService;
    FBKVOController *_kvoController;
    SPTVideoPlayerSource *_playerSource;
    SPTNetworkConnectivityController *_connController;
    SPTVideoPlaybackState *_lastState;
    SPTVideoAVFactory *_playerItemFactory;
    SPTask *_manifestTask;
    id <SPTWVCancellable> _keyTask;
    AVURLAsset *_asset;
    AVPlayer *_player;
    AVPlayerItem *_playerItem;
    double _initialOffset;
    NSError *_error;
    double _lastSeekTime;
    NSDate *_lastSeekEventDate;
    long long _playerResetCount;
    NSTimer *_syncTimer;
}

@property(retain, nonatomic) NSTimer *syncTimer; // @synthesize syncTimer=_syncTimer;
@property(nonatomic) long long playerResetCount; // @synthesize playerResetCount=_playerResetCount;
@property(nonatomic) _Bool restartStreamOnceOnline; // @synthesize restartStreamOnceOnline=_restartStreamOnceOnline;
@property(nonatomic) _Bool offline; // @synthesize offline=_offline;
@property(retain, nonatomic) NSDate *lastSeekEventDate; // @synthesize lastSeekEventDate=_lastSeekEventDate;
@property(nonatomic) double lastSeekTime; // @synthesize lastSeekTime=_lastSeekTime;
@property(nonatomic) _Bool catchingUp; // @synthesize catchingUp=_catchingUp;
@property(nonatomic) _Bool stalled; // @synthesize stalled=_stalled;
@property(nonatomic) _Bool seeking; // @synthesize seeking=_seeking;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) double initialOffset; // @synthesize initialOffset=_initialOffset;
@property(retain, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) AVURLAsset *asset; // @synthesize asset=_asset;
@property(retain, nonatomic) id <SPTWVCancellable> keyTask; // @synthesize keyTask=_keyTask;
@property(retain, nonatomic) SPTask *manifestTask; // @synthesize manifestTask=_manifestTask;
@property(retain, nonatomic) SPTVideoAVFactory *playerItemFactory; // @synthesize playerItemFactory=_playerItemFactory;
@property(retain, nonatomic) SPTVideoPlaybackState *lastState; // @synthesize lastState=_lastState;
@property(retain, nonatomic) SPTNetworkConnectivityController *connController; // @synthesize connController=_connController;
@property(retain, nonatomic) SPTVideoPlayerSource *playerSource; // @synthesize playerSource=_playerSource;
@property(retain, nonatomic) FBKVOController *kvoController; // @synthesize kvoController=_kvoController;
@property(retain, nonatomic) SPTWidevineService *widevineService; // @synthesize widevineService=_widevineService;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *resourceLoaderQueue; // @synthesize resourceLoaderQueue=_resourceLoaderQueue;
@property(retain, nonatomic) SPTHLSResourceLoaderImpl *resourceLoader; // @synthesize resourceLoader=_resourceLoader;
@property(nonatomic, getter=isPaused) _Bool paused; // @synthesize paused=_paused;
@property(nonatomic) __weak id <SPTVideoPlaybackSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) SPTVideoLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) SPTVideoTrack *videoTrack; // @synthesize videoTrack=_videoTrack;
- (void).cxx_destruct;
- (double)durationForPlayer;
- (double)positionForPlayer;
- (_Bool)isBuffering;
- (id)manifestID;
- (void)willEnterForeground;
- (void)playerItemDidStall:(id)arg1;
- (void)playerItemDidReachEnd:(id)arg1;
- (void)sendPlaybackError:(id)arg1;
- (void)sendStateUpdate:(id)arg1;
- (void)sendStateUpdate:(id)arg1 forced:(_Bool)arg2;
- (void)refreshPlayerSynchronizationTimer;
- (void)synchronizePlayer;
- (void)kvo_itemLikelyToKeepUpChanged:(id)arg1 object:(id)arg2;
- (void)kvo_itemStatusChanged:(id)arg1 object:(id)arg2;
- (void)kvo_playerStatusChanged:(id)arg1 object:(id)arg2;
- (void)assetFailedToPrepareForPlayback:(id)arg1 fromPlayer:(_Bool)arg2;
- (void)refreshAVStack:(id)arg1;
- (void)prepareAssetWithKeys:(id)arg1;
- (void)prepareAsset;
- (void)prepareDRM:(id)arg1;
- (void)refreshPlayer;
- (double)duration;
- (double)currentTime;
- (void)seekTo:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)restartSession;
- (void)unloadSession;
- (void)loadSession;
- (void)dealloc;
- (id)init;
- (id)initWithVideoTrack:(id)arg1 initialOffset:(double)arg2 startPaused:(_Bool)arg3 resourceLoader:(id)arg4 widevineService:(id)arg5 logger:(id)arg6 playerSource:(id)arg7 networkConnectivityController:(id)arg8 playerItemFactory:(id)arg9;

@end

