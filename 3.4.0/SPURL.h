//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSURL.h"

@class NSArray, NSString;

@interface SPURL : NSURL
{
    struct SpotifyLink _link;
}

+ (id)URLWithURL:(id)arg1;
+ (id)URLWithPlaylistImageIdentifier:(id)arg1;
+ (id)URLWithSpotifyLink:(const struct SpotifyLink *)arg1;
+ (id)URLWithFuzzyString:(id)arg1;
+ (id)URLWithString:(id)arg1;
+ (id)URLWithUTF8String:(const char *)arg1;
+ (id)emptyURL;
@property(nonatomic) struct SpotifyLink link; // @synthesize link=_link;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) _Bool canAddToInbox;
@property(readonly, nonatomic) _Bool isCollectionUnionMissingAlbum;
@property(readonly, nonatomic) _Bool isCollectionUnionAlbum;
@property(readonly, nonatomic) _Bool isCollectionUnionArtistAllTracks;
@property(readonly, nonatomic) _Bool isCollectionUnionArtist;
@property(readonly, nonatomic) _Bool isCollectionUnion;
@property(readonly, nonatomic) _Bool isCollection;
@property(readonly, nonatomic) _Bool isFollowPage;
@property(readonly, nonatomic) _Bool isLocalFilesPlaylist;
@property(readonly, nonatomic) _Bool isPublishedRoot;
@property(readonly, nonatomic) _Bool isPlaylistFolder;
@property(readonly, nonatomic) _Bool isPlaylistRootTree;
@property(readonly, nonatomic) _Bool isPlaylistRoot;
@property(readonly, nonatomic) _Bool isAd;
@property(readonly, nonatomic) _Bool isRadio;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) _Bool isInternalViewLink;
@property(readonly, nonatomic) _Bool isInternalData;
@property(readonly, nonatomic) _Bool isImage;
@property(readonly, nonatomic) _Bool isMosaicImage;
@property(readonly, nonatomic) _Bool isLocalFileImage;
@property(readonly, nonatomic) _Bool isSpotifyImage;
@property(readonly, nonatomic) _Bool isTrack;
@property(readonly, nonatomic) _Bool isLocalTrack;
@property(readonly, nonatomic) _Bool isSpotifyTrack;
@property(readonly, nonatomic) _Bool isJustStartApp;
@property(readonly, nonatomic) _Bool isProfile;
@property(readonly, nonatomic) _Bool isInbox;
@property(readonly, nonatomic) _Bool isStarred;
@property(readonly, nonatomic) _Bool isToplist;
@property(readonly, nonatomic) _Bool isPlaylist;
@property(readonly, nonatomic) _Bool isSearch;
@property(readonly, nonatomic) _Bool isApplication;
@property(readonly, nonatomic) _Bool isAlbum;
@property(readonly, nonatomic) _Bool isArtistTopTracks;
@property(readonly, nonatomic) _Bool isArtist;
@property(readonly, nonatomic) unsigned int trackOffset;
@property(readonly, nonatomic) NSString *username;
@property(readonly, nonatomic) unsigned long long folderId;
@property(readonly, nonatomic) NSArray *mosaicImageLinks;
@property(readonly, nonatomic) NSString *radioId;
@property(readonly, nonatomic) int internalView;
@property(readonly, nonatomic) NSString *application;
@property(readonly, nonatomic) NSString *internalData;
@property(readonly, nonatomic) NSString *searchQuery;
- (id)URIString;
- (id)URI;
- (id)URL;
@property(readonly, nonatomic) NSURL *URLRedirectingThroughHTTP;
- (id)initWithCollectionUnionForUsername:(id)arg1 artistName:(id)arg2 missingLocalAlbumName:(id)arg3;
- (id)initWithCollectionUnionForUsername:(id)arg1 missingAlbum:(id)arg2;
- (id)initWithCollectionUnionForUsername:(id)arg1 artistName:(id)arg2 localAlbumName:(id)arg3;
- (id)initWithCollectionUnionForUsername:(id)arg1 album:(id)arg2;
- (id)initWithCollectionUnionForUsername:(id)arg1 allTracksLocalArtistName:(id)arg2;
- (id)initWithCollectionUnionForUsername:(id)arg1 allTracksArtist:(id)arg2;
- (id)initWithCollectionUnionForUsername:(id)arg1 localArtistName:(id)arg2;
- (id)initWithCollectionUnionForUsername:(id)arg1 artist:(id)arg2;
- (id)initWithCollectionUnionForUsername:(id)arg1;
- (id)initWithCollectionForUsername:(id)arg1;
- (id)initWithImageId:(struct ImageId)arg1;
- (id)initAsMosaicWithImageLinks:(id)arg1;
- (id)initWithApplication:(id)arg1 arguments:(id)arg2;
- (id)initWithSearchQuery:(id)arg1;
- (id)initWithUser:(id)arg1;
- (id)initWithUserName:(id)arg1;
- (id)initWithTrack:(id)arg1;
- (id)initWithAlbum:(id)arg1;
- (id)initWithArtist:(id)arg1;
- (id)initWithPlaylist:(id)arg1;
- (id)initWithURL:(id)arg1;
- (id)initWithPlaylistImageIdentifier:(id)arg1;
- (id)initWithSpotifyLink:(const struct SpotifyLink *)arg1;
- (id)initWithFuzzyString:(id)arg1;
- (id)initWithString:(id)arg1;

@end

