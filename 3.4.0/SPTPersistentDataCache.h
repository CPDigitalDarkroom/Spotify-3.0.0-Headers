//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSFileManager, NSMutableSet, NSObject<OS_dispatch_queue>, NSTimer, SPTPersistentDataCacheOptions;

@interface SPTPersistentDataCache : NSObject
{
    SPTPersistentDataCacheOptions *_options;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSFileManager *_fileManager;
    NSTimer *_gcTimer;
    CDUnknownBlockType _debugOutput;
    CDUnknownBlockType _currentTime;
    NSMutableSet *_busyKeys;
}

@property(retain, nonatomic) NSMutableSet *busyKeys; // @synthesize busyKeys=_busyKeys;
@property(copy, nonatomic) CDUnknownBlockType currentTime; // @synthesize currentTime=_currentTime;
@property(copy, nonatomic) CDUnknownBlockType debugOutput; // @synthesize debugOutput=_debugOutput;
@property(retain, nonatomic) NSTimer *gcTimer; // @synthesize gcTimer=_gcTimer;
@property(retain, nonatomic) NSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(copy, nonatomic) SPTPersistentDataCacheOptions *options; // @synthesize options=_options;
- (void).cxx_destruct;
- (_Bool)processKeyIfBusy:(id)arg1 callback:(CDUnknownBlockType)arg2 queue:(id)arg3;
- (id)storedImageNamesAndAttributes;
- (long long)optimalSizeForCache:(long long)arg1;
- (void)pruneBySize;
- (void)debugOutput:(id)arg1;
- (unsigned long long)getFileSizeAtPath:(id)arg1;
- (void)dispatchError:(id)arg1 result:(long long)arg2 callback:(CDUnknownBlockType)arg3 onQueue:(id)arg4;
- (void)dispatchEmptyResponseWithResult:(long long)arg1 callback:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (void)cleanCacheData;
- (void)collectGarbageForceExpire:(_Bool)arg1 forceLocked:(_Bool)arg2;
- (void)runRegularGC;
- (_Bool)isDataCanBeReturnedWithHeader:(struct SPTPersistentRecordHeaderType *)arg1;
- (_Bool)isDataExpiredWithHeader:(struct SPTPersistentRecordHeaderType *)arg1;
- (id)checkHeaderValid:(struct SPTPersistentRecordHeaderType *)arg1;
- (id)nsErrorWithCode:(long long)arg1;
- (id)pathForKey:(id)arg1;
- (id)subDirectoryPathForKey:(id)arg1;
- (id)alterHeaderForFileAtPath:(id)arg1 withBlock:(CDUnknownBlockType)arg2 writeBack:(_Bool)arg3 complain:(_Bool)arg4;
- (id)guardOpenFileWithPath:(id)arg1 jobBlock:(CDUnknownBlockType)arg2 complain:(_Bool)arg3 writeBack:(_Bool)arg4;
- (id)storeDataSync:(id)arg1 forKey:(id)arg2 ttl:(unsigned long long)arg3 locked:(_Bool)arg4 withCallback:(CDUnknownBlockType)arg5 onQueue:(id)arg6;
- (void)loadDataForKeySync:(id)arg1 withCallback:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (void)dealloc;
- (unsigned long long)lockedItemsSizeInBytes;
- (unsigned long long)totalUsedSizeInBytes;
- (void)wipeNonLockedFiles;
- (void)wipeLockedFiles;
- (void)prune;
- (void)unscheduleGarbageCollector;
- (void)scheduleGarbageCollector;
- (void)unlockDataForKeys:(id)arg1 callback:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (void)lockDataForKeys:(id)arg1 callback:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (void)removeDataForKeys:(id)arg1;
- (void)removeDataForKeysSync:(id)arg1;
- (void)touchDataForKey:(id)arg1 callback:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (void)openDataStreamForKey:(id)arg1 createIfNotExist:(_Bool)arg2 ttl:(unsigned long long)arg3 locked:(_Bool)arg4 withCallback:(CDUnknownBlockType)arg5 onQueue:(id)arg6;
- (void)storeData:(id)arg1 forKey:(id)arg2 ttl:(unsigned long long)arg3 locked:(_Bool)arg4 withCallback:(CDUnknownBlockType)arg5 onQueue:(id)arg6;
- (void)storeData:(id)arg1 forKey:(id)arg2 locked:(_Bool)arg3 withCallback:(CDUnknownBlockType)arg4 onQueue:(id)arg5;
- (void)loadDataForKeysWithPrefix:(id)arg1 chooseKeyCallback:(CDUnknownBlockType)arg2 withCallback:(CDUnknownBlockType)arg3 onQueue:(id)arg4;
- (void)loadDataForKey:(id)arg1 withCallback:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (id)initWithOptions:(id)arg1;
- (id)init;

@end

