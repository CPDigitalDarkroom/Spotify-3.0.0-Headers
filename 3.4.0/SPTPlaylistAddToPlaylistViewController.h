//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "SPTPlaylistFolderViewController.h"

#import "SPTContextMenuContentViewController.h"

@class NSArray, NSString, SPSession, SPTEntityCancelationToken, SPTEntityService, SPTOfflineManager, SPTPlaylistCreateNewPlaylistController, SPTPopoverController, SPTTableView;

@interface SPTPlaylistAddToPlaylistViewController : SPTPlaylistFolderViewController <SPTContextMenuContentViewController>
{
    _Bool _isAdding;
    id <SPTContextMenuContentViewControllerDelegate> contextMenuDelegate;
    SPTPopoverController *_currentPopoverController;
    SPSession *_session;
    id <CollectionFeature> _collection;
    SPTEntityService *_entityService;
    SPTOfflineManager *_offlineManager;
    SPTTableView *_tableView;
    NSArray *_tracksToAdd;
    NSString *_defaultPlaylistName;
    id <SPTProductState> _productState;
    CDUnknownBlockType _addAction;
    CDUnknownBlockType _skipAction;
    SPTPlaylistCreateNewPlaylistController *_createNewPlaylistController;
    SPTEntityCancelationToken *_cancelationToken;
    id <SPTImageLoaderFactory> _imageLoaderFactory;
    id <SPTOfflineModeState> _offlineNotifier;
}

@property(retain, nonatomic) id <SPTOfflineModeState> offlineNotifier; // @synthesize offlineNotifier=_offlineNotifier;
@property(retain, nonatomic) id <SPTImageLoaderFactory> imageLoaderFactory; // @synthesize imageLoaderFactory=_imageLoaderFactory;
@property(retain, nonatomic) SPTEntityCancelationToken *cancelationToken; // @synthesize cancelationToken=_cancelationToken;
@property(retain, nonatomic) SPTPlaylistCreateNewPlaylistController *createNewPlaylistController; // @synthesize createNewPlaylistController=_createNewPlaylistController;
@property(nonatomic) _Bool isAdding; // @synthesize isAdding=_isAdding;
@property(copy, nonatomic) CDUnknownBlockType skipAction; // @synthesize skipAction=_skipAction;
@property(copy, nonatomic) CDUnknownBlockType addAction; // @synthesize addAction=_addAction;
@property(retain, nonatomic) id <SPTProductState> productState; // @synthesize productState=_productState;
@property(copy, nonatomic) NSString *defaultPlaylistName; // @synthesize defaultPlaylistName=_defaultPlaylistName;
@property(retain, nonatomic) NSArray *tracksToAdd; // @synthesize tracksToAdd=_tracksToAdd;
@property(retain, nonatomic) SPTTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) SPTOfflineManager *offlineManager; // @synthesize offlineManager=_offlineManager;
@property(nonatomic) __weak SPTEntityService *entityService; // @synthesize entityService=_entityService;
@property(nonatomic) __weak id <CollectionFeature> collection; // @synthesize collection=_collection;
@property(nonatomic) __weak SPSession *session; // @synthesize session=_session;
@property(nonatomic) __weak SPTPopoverController *currentPopoverController; // @synthesize currentPopoverController=_currentPopoverController;
@property(nonatomic) __weak id <SPTContextMenuContentViewControllerDelegate> contextMenuDelegate; // @synthesize contextMenuDelegate;
- (void).cxx_destruct;
- (void)createNewPlaylistController:(id)arg1 didCreateNewPlaylist:(id)arg2;
- (void)playlistFolderViewModelDidUpdate:(id)arg1;
- (void)executeSkipAction;
- (void)executeAddAction;
- (void)createNewPlaylistButtonTapped;
- (void)showAddedConfirmationWithPlaylistName:(id)arg1;
- (void)addTrackURLs:(id)arg1 toPlaylistAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)dismiss;
- (void)loadView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)dealloc;
- (id)initWithSession:(id)arg1 offlineManager:(id)arg2 collection:(id)arg3 container:(id)arg4 tracksToAdd:(id)arg5 defaultPlaylistName:(id)arg6 imageLoaderFactory:(id)arg7 productState:(id)arg8 entityService:(id)arg9 offlineModeNotifier:(id)arg10;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

