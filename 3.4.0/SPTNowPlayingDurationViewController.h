//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "SPTNowPlayingCarouselInteractionEventObserver.h"
#import "SPTNowPlayingContainedViewController.h"
#import "SPTNowPlayingDurationViewDelegate.h"
#import "SPTNowPlayingTrackMetadataQueueObserver.h"
#import "SPTNowPlayingTrackPositionObserver.h"

@class NSString, SPTLayoutConstraintBuilder, SPTLogCenter, SPTNowPlayingDurationDataSource, SPTNowPlayingDurationView, SPTNowPlayingTrackMetadataQueue, SPTNowPlayingTrackPosition, SPTTheme, UIViewController<SPTNowPlayingContainingViewController>;

@interface SPTNowPlayingDurationViewController : UIViewController <SPTNowPlayingTrackMetadataQueueObserver, SPTNowPlayingTrackPositionObserver, SPTNowPlayingCarouselInteractionEventObserver, SPTNowPlayingContainedViewController, SPTNowPlayingDurationViewDelegate>
{
    _Bool _scrubbing;
    _Bool _showLabels;
    _Bool _hasShownLabelsAfterTrackChange;
    SPTLogCenter *_logCenter;
    id <SPTNowPlayingDurationViewControllerDelegate> _optionalDataSource;
    SPTNowPlayingDurationDataSource *_dataSource;
    SPTNowPlayingDurationView *_durationView;
    SPTTheme *_theme;
    SPTNowPlayingTrackPosition *_trackPositionModel;
    SPTNowPlayingTrackMetadataQueue *_trackMetadataQueue;
    SPTLayoutConstraintBuilder *_layout;
    id <SPTLocalSettings> _localSettings;
}

@property(nonatomic) _Bool hasShownLabelsAfterTrackChange; // @synthesize hasShownLabelsAfterTrackChange=_hasShownLabelsAfterTrackChange;
@property(nonatomic) _Bool showLabels; // @synthesize showLabels=_showLabels;
@property(nonatomic) _Bool scrubbing; // @synthesize scrubbing=_scrubbing;
@property(retain, nonatomic) id <SPTLocalSettings> localSettings; // @synthesize localSettings=_localSettings;
@property(retain, nonatomic) SPTLayoutConstraintBuilder *layout; // @synthesize layout=_layout;
@property(retain, nonatomic) SPTNowPlayingTrackMetadataQueue *trackMetadataQueue; // @synthesize trackMetadataQueue=_trackMetadataQueue;
@property(retain, nonatomic) SPTNowPlayingTrackPosition *trackPositionModel; // @synthesize trackPositionModel=_trackPositionModel;
@property(retain, nonatomic) SPTTheme *theme; // @synthesize theme=_theme;
@property(retain, nonatomic) SPTNowPlayingDurationView *durationView; // @synthesize durationView=_durationView;
@property(readonly, nonatomic) SPTNowPlayingDurationDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) __weak id <SPTNowPlayingDurationViewControllerDelegate> optionalDataSource; // @synthesize optionalDataSource=_optionalDataSource;
@property(readonly, nonatomic) __weak SPTLogCenter *logCenter; // @synthesize logCenter=_logCenter;
- (void).cxx_destruct;
- (void)carouselViewControllerDidDetectCoverArtTap:(id)arg1;
- (void)trackMetadataQueueDidFinishUpdating:(id)arg1;
- (void)trackMetadataQueue:(id)arg1 didMoveToRelativeTrack:(id)arg2;
- (void)nowPlayingTrackPositionDidChange:(id)arg1;
- (void)durationViewTappedSlider:(id)arg1;
- (void)durationViewTappedTimeRemainingLabel:(id)arg1;
- (void)durationViewEndedScrubbing:(id)arg1;
- (void)durationViewBeganScrubbing:(id)arg1;
- (void)durationView:(id)arg1 trackProgressChanged:(float)arg2;
- (struct CGSize)preferredContentSize;
- (double)viewControllerPriority;
- (unsigned long long)leadingEdge;
- (void)showLabelsTemporarily;
- (void)hideLabelsAfterTemporarilyShowing;
- (void)updateLabelsLayout;
- (void)updateLabelsVisibility;
- (void)updateViewConstraints;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)registerNotificationObservers;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithTheme:(id)arg1 trackPositionModel:(id)arg2 trackMetadataQueue:(id)arg3 logCenter:(id)arg4 localSettings:(id)arg5;

// Remaining properties
@property(nonatomic) __weak UIViewController<SPTNowPlayingContainingViewController> *container;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

