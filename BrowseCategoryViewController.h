//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "SPViewController.h"

#import "BrowseCategoryViewController.h"
#import "BrowseCollectionViewDelegate.h"
#import "SPForegroundObserverDelegate.h"
#import "SPObjectRepresentation.h"
#import "SPSessionObserver.h"
#import "SPTBrowseFilterContextViewControllerDelegate.h"
#import "SPTBrowseHeaderActionProtocol.h"
#import "SPTCeramicRequestDelegate.h"
#import "SPTImageLoaderDelegate.h"
#import "SPTNavigationControllerNavigationBarState.h"
#import "SPTTouchViewEngineDelegate.h"
#import "UICollectionViewDataSource.h"
#import "UICollectionViewDelegate.h"
#import "UIScrollViewDelegate.h"

@class BrowseCollectionView, BrowseGenreItem, NSArray, NSMutableDictionary, NSPredicate, NSString, SPForegroundObserver, SPSession, SPTBrowseCategoryRequest, SPTBrowseFilterContextViewController, SPTBrowseGenreHeaderViewController, SPTBrowseGenresRequest, SPTEntityHeaderViewController, SPTInfoView, SPTPopoverController, SPTProgressView;

@interface BrowseCategoryViewController : SPViewController <SPForegroundObserverDelegate, SPTNavigationControllerNavigationBarState, SPObjectRepresentation, SPTBrowseFilterContextViewControllerDelegate, SPTImageLoaderDelegate, SPTTouchViewEngineDelegate, SPTBrowseHeaderActionProtocol, SPSessionObserver, BrowseCollectionViewDelegate, UICollectionViewDelegate, UICollectionViewDataSource, SPTCeramicRequestDelegate, UIScrollViewDelegate, BrowseCategoryViewController>
{
    BOOL _shouldRenderPlaybuttonsForNewReleases;
    BOOL _showPlayTopSongsButton;
    NSString *_categoryTitle;
    SPTBrowseGenresRequest *_genresModel;
    SPTPopoverController *_filterPopoverController;
    BrowseCollectionView *_collectionView;
    SPTInfoView *_offlineView;
    SPTBrowseCategoryRequest *_model;
    SPForegroundObserver *_foregroundObserver;
    id <SPTAudioTouch> _audioTouch;
    NSMutableDictionary *_cells;
    NSPredicate *_currentFilterPredicate;
    int _currentSelectedPickerRow;
    NSArray *_subCategories;
    id <SPTImageLoader> _imageLoader;
    BrowseGenreItem *_currentGenre;
    NSString *_categoryID;
    SPTBrowseFilterContextViewController *_contextViewController;
    SPTEntityHeaderViewController *_entityHeader;
    SPTBrowseGenreHeaderViewController *_headerContent;
    SPSession *_session;
    id <SPTProductState> _productState;
    id <SPTSocialChartFeature> _socialChartFeature;
    id <SPTImageLoaderFactory> _imageLoaderFactory;
    id <SPTAudioDriverController> _audioDriverController;
    SPTProgressView *_progressView;
    id <SPTOfflineInfoViewFactory> _offlineInfoViewFactory;
}

@property(retain, nonatomic) id <SPTOfflineInfoViewFactory> offlineInfoViewFactory; // @synthesize offlineInfoViewFactory=_offlineInfoViewFactory;
@property(retain, nonatomic) SPTProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) id <SPTAudioDriverController> audioDriverController; // @synthesize audioDriverController=_audioDriverController;
@property(retain, nonatomic) id <SPTImageLoaderFactory> imageLoaderFactory; // @synthesize imageLoaderFactory=_imageLoaderFactory;
@property(retain, nonatomic) id <SPTSocialChartFeature> socialChartFeature; // @synthesize socialChartFeature=_socialChartFeature;
@property(retain, nonatomic) id <SPTProductState> productState; // @synthesize productState=_productState;
@property(nonatomic) __weak SPSession *session; // @synthesize session=_session;
@property(retain, nonatomic) SPTBrowseGenreHeaderViewController *headerContent; // @synthesize headerContent=_headerContent;
@property(retain, nonatomic) SPTEntityHeaderViewController *entityHeader; // @synthesize entityHeader=_entityHeader;
@property(nonatomic) BOOL showPlayTopSongsButton; // @synthesize showPlayTopSongsButton=_showPlayTopSongsButton;
@property(retain, nonatomic) SPTBrowseFilterContextViewController *contextViewController; // @synthesize contextViewController=_contextViewController;
@property(retain, nonatomic) NSString *categoryID; // @synthesize categoryID=_categoryID;
@property(retain, nonatomic) BrowseGenreItem *currentGenre; // @synthesize currentGenre=_currentGenre;
@property(retain, nonatomic) id <SPTImageLoader> imageLoader; // @synthesize imageLoader=_imageLoader;
@property(retain, nonatomic) NSArray *subCategories; // @synthesize subCategories=_subCategories;
@property(nonatomic) int currentSelectedPickerRow; // @synthesize currentSelectedPickerRow=_currentSelectedPickerRow;
@property(retain, nonatomic) NSPredicate *currentFilterPredicate; // @synthesize currentFilterPredicate=_currentFilterPredicate;
@property(retain, nonatomic) NSMutableDictionary *cells; // @synthesize cells=_cells;
@property(retain, nonatomic) id <SPTAudioTouch> audioTouch; // @synthesize audioTouch=_audioTouch;
@property(retain, nonatomic) SPForegroundObserver *foregroundObserver; // @synthesize foregroundObserver=_foregroundObserver;
@property(retain, nonatomic) SPTBrowseCategoryRequest *model; // @synthesize model=_model;
@property(retain, nonatomic) SPTInfoView *offlineView; // @synthesize offlineView=_offlineView;
@property(retain, nonatomic) BrowseCollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) SPTPopoverController *filterPopoverController; // @synthesize filterPopoverController=_filterPopoverController;
@property(retain, nonatomic) SPTBrowseGenresRequest *genresModel; // @synthesize genresModel=_genresModel;
@property(nonatomic) BOOL shouldRenderPlaybuttonsForNewReleases; // @synthesize shouldRenderPlaybuttonsForNewReleases=_shouldRenderPlaybuttonsForNewReleases;
@property(retain, nonatomic) NSString *categoryTitle; // @synthesize categoryTitle=_categoryTitle;
- (void).cxx_destruct;
- (void)viewEngine:(id)arg1 prepareView:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)itemIsSocialChart:(id)arg1;
- (id)cellDetailTextFromItem:(id)arg1;
- (id)cellSubtitleTextFromItem:(id)arg1;
- (id)cellTitleTextFromItem:(id)arg1;
- (void)updateWithGenreItem:(id)arg1 genresModel:(id)arg2;
- (void)browseFilterContextViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)headerViewController:(id)arg1 didSelectMainControl:(id)arg2 withValue:(int)arg3;
- (id)objectRepresentation;
- (unsigned int)preferredNavigationBarState;
- (void)imageLoader:(id)arg1 didLoadImage:(id)arg2 forURL:(id)arg3 loadTime:(double)arg4 context:(id)arg5;
- (int)stackedNavigationPageSize;
- (void)browseCollectionViewDidApplyNewFilter:(id)arg1 withRow:(int)arg2;
- (id)filterButtonTitle;
- (id)categoryAndSubTitle;
- (id)subcategoryTitle;
- (int)browseCollectionViewCurrentFilterRow:(id)arg1;
- (id)viewEventURI;
- (void)foregroundObserverDidHibernate:(id)arg1;
- (void)foregroundObserverDidAwake:(id)arg1;
- (void)ceramicRequest:(id)arg1 didLoadWithError:(id)arg2;
- (void)sessionLoginModeChanged:(id)arg1;
- (void)hideOfflineView;
- (void)showOfflineView;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (unsigned int)preferredCellStyle;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (int)collectionView:(id)arg1 numberOfItemsInSection:(int)arg2;
- (BOOL)automaticallyAdjustsScrollViewInsets;
- (void)deselectSelectedItems;
- (void)viewDidBecomeActiveInStackedNavigation;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewWillLayoutSubviews;
- (void)updateHeaderContents;
- (void)viewDidLoad;
- (void)setupStandardHeaderView;
- (void)dealloc;
- (id)initWithGenreItem:(id)arg1 genresModel:(id)arg2 categoryID:(id)arg3 imageLoaderFactory:(id)arg4 session:(id)arg5 productState:(id)arg6 audioTouch:(id)arg7 socialChartFeature:(id)arg8 audioDriverController:(id)arg9 offlineInfoViewFactory:(id)arg10;
- (id)initWithProductState:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

