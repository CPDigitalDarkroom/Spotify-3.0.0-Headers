//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AVPlayerItem, NSData, NSDate, NSMutableSet, NSString, SPTHLSResourceLoaderImpl, SPTLogCenter, SPTVideoLoggerMetrics, SPTVideoTrack;

@interface SPTVideoLogger : NSObject
{
    BOOL _shuffleMode;
    BOOL _incognitoMode;
    BOOL _userDidSkip;
    BOOL _endVideoLogged;
    AVPlayerItem *_playerItem;
    SPTVideoLoggerMetrics *_metrics;
    SPTHLSResourceLoaderImpl *_resourceLoader;
    SPTLogCenter *_logCenter;
    SPTVideoTrack *_videoTrack;
    NSDate *_playIntentionDate;
    NSString *_startReason;
    NSDate *_offlinedAt;
    NSString *_streamingRules;
    NSData *_fileIDData;
    NSData *_playbackIDData;
    int _connectionType;
    NSMutableSet *_loggedErrorEvents;
    double _startOffset;
}

@property(nonatomic) BOOL endVideoLogged; // @synthesize endVideoLogged=_endVideoLogged;
@property(retain, nonatomic) NSMutableSet *loggedErrorEvents; // @synthesize loggedErrorEvents=_loggedErrorEvents;
@property(nonatomic) BOOL userDidSkip; // @synthesize userDidSkip=_userDidSkip;
@property(nonatomic) int connectionType; // @synthesize connectionType=_connectionType;
@property(retain, nonatomic) NSData *playbackIDData; // @synthesize playbackIDData=_playbackIDData;
@property(retain, nonatomic) NSData *fileIDData; // @synthesize fileIDData=_fileIDData;
@property(retain, nonatomic) NSString *streamingRules; // @synthesize streamingRules=_streamingRules;
@property(retain, nonatomic) NSDate *offlinedAt; // @synthesize offlinedAt=_offlinedAt;
@property(nonatomic) BOOL incognitoMode; // @synthesize incognitoMode=_incognitoMode;
@property(nonatomic) BOOL shuffleMode; // @synthesize shuffleMode=_shuffleMode;
@property(nonatomic) double startOffset; // @synthesize startOffset=_startOffset;
@property(retain, nonatomic) NSString *startReason; // @synthesize startReason=_startReason;
@property(retain, nonatomic) NSDate *playIntentionDate; // @synthesize playIntentionDate=_playIntentionDate;
@property(retain, nonatomic) SPTVideoTrack *videoTrack; // @synthesize videoTrack=_videoTrack;
@property(nonatomic) __weak SPTLogCenter *logCenter; // @synthesize logCenter=_logCenter;
@property(retain, nonatomic) SPTHLSResourceLoaderImpl *resourceLoader; // @synthesize resourceLoader=_resourceLoader;
@property(retain, nonatomic) SPTVideoLoggerMetrics *metrics; // @synthesize metrics=_metrics;
@property(retain, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
- (void).cxx_destruct;
- (void)playerItemDidReceiveErrorLog:(id)arg1;
- (double)manifestLatency;
- (double)uiLatency;
- (double)networkLatency;
- (void)logPlayerItemErrorEvent:(id)arg1;
- (void)logFatalError:(id)arg1;
- (void)didSkip;
- (void)sendEndVideoMessage;
- (BOOL)logEndVideo;
- (void)dealloc;
- (id)initWithLogCenter:(id)arg1 hlsResourceLoader:(id)arg2 videoTrack:(id)arg3 startReason:(id)arg4 startOffset:(double)arg5 playIntentionDate:(id)arg6 shuffleMode:(BOOL)arg7 offlinedAt:(id)arg8 incognitoMode:(BOOL)arg9 streamingRules:(id)arg10 fileID:(id)arg11 connectionType:(int)arg12;

@end

